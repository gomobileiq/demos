@import "variables";

@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @while $index {
    $string: str-slice($string, 1, $index - 1) + $replace + str-slice($string, $index + 1);
    $index: str-index($string, $search);
  }

  @return $string;
}

@function str-capitalise($string) {
  $string: $string + unquote("");

  @return to-upper-case(str-slice($string, 0, 1)) + str-slice($string, 2);
}

@function filename($font-family, $weight, $style) {
  $font-family: str-replace($font-family, " ", "");
  $style: if($style == normal, "", str-capitalise($style));
  $weight: str-capitalise($weight);

  @return "#{$font-family}-#{$weight}#{$style}";
}

@mixin font-source($filename, $font-formats) {
  $font-format-list: ();

  @each $format in $font-formats {
    $current-font-format: url("#{$path-fonts}#{$filename}.#{$format}") format($format);
    $font-format-list: append($font-format-list, $current-font-format, comma);
  }

  src: $font-format-list;
}

@mixin font-face-for($font-family, $weight, $style, $filename, $font-formats) {
  @font-face {
    @include font-source($filename, $font-formats);

    font-family: $font-family;
    font-weight: $weight;
    font-style: $style;
    font-stretch: normal;
    font-display: optional;
  }
}

@mixin font-face($font-families, $font-formats) {
  $font-family-names: map-keys($font-families);
  $css-weights: (
    "thin":       100,
    "light":      200,
    "book":       300,
    "regular":    400,
    "medium":     500,
    "semibold":   600,
    "bold":       700,
    "black":      800,
    "ultrablack": 900,
  );

  @each $font-family in $font-family-names {
    @each $variant in map-get($font-families, $font-family) {
      $css-weight: unquote(map-get($variant, weight));
      $css-weight-numeric: map-get($css-weights, $css-weight);
      $css-style: unquote(map-get($variant, style));
      $filename: filename($font-family, $css-weight, $css-style);

      @include font-face-for($font-family, $css-weight-numeric, $css-style, $filename, $font-formats);
    }
  }
}

@mixin centerSelfX {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

@mixin centerSelfY {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

@mixin centerSelf {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

@mixin IEOnly {
  @media (-ms-high-contrast: active), (-ms-high-contrast: none) {
    @content;
  }
}
